// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id @default(uuid())
  firstName           String        @map("first_name")
  lastName            String?       @map("last_name")
  email               String        @unique
  password            String
  address             String?
  phone               String
  products            Product[]
  outgoingTransaction Transaction[] @relation("originalOwner")
  incomingTransaction Transaction[] @relation("newHolder")

  @@map("users")
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum RentDuration {
  DAY
  WEEK
  BIWEEK
  MONTH
  QUARTER
  HALFYEAR
  YEAR
}

model Product {
  id          String     @id @default(uuid())
  title       String
  category    Category[]
  description String
  createdAt   DateTime   @default(now())
  owner       User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     String

  price        Int
  rentPrice    Int
  rentDuration RentDuration
  view         Int           @default(0)
  transaction  Transaction[]

  @@map("products")
}

enum TransactionType {
  SELL
  RENT
}

model Transaction {
  id              Int             @id @default(autoincrement())
  transactionType TransactionType

  product         Product   @relation(fields: [productID], references: [id], onDelete: Cascade)
  productID       String
  originalOwner   User      @relation("originalOwner", fields: [originalOwnerId], references: [id])
  originalOwnerId String
  newHolder       User      @relation("newHolder", fields: [newHolderId], references: [id])
  newHolderId     String
  transactionDate DateTime  @default(now())
  rentStartDate   DateTime?
  rentEndDate     DateTime?
}
